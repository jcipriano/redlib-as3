package org.redblind.display{	import flash.display.Sprite;		import flash.events.StatusEvent;		import flash.geom.Matrix;		import flash.geom.Point;		import flash.media.Video;		import flash.display.DisplayObject;		import flash.display.BitmapData;	import flash.media.Camera;		public class CameraDisplay extends Sprite	{		private var _video:Video;		private var _camera:Camera;		private var _cams:Array;		private var _bmd:BitmapData;		private var _width:int;		private var _height:int;		private var _fps:int;		private var _mirrored:Boolean;		private var _mm:Matrix;		private var _status:String;		public function CameraDisplay(w:int=320,h:int=240,fps:int=30)		{			_video = new Video(w,h);			_cams = Camera.names;			trace('CAMERAS: '+_cams);			_camera = Camera.getCamera();			_width = w;			_height = h;			_fps = fps;		}		public function	startCamera():void		{			_camera.addEventListener(StatusEvent.STATUS, handleCamStatus);			_camera.setMode(_width,_height,_fps);			_video.attachCamera(_camera);			addChild(_video);		}				protected function handleCamStatus(e:StatusEvent):void		{			_status = e.code;		}				public function get bitmapData():BitmapData		{			_bmd = new BitmapData(this.width,this.height,true,0x00FFFFFF);			if(_mirrored) _bmd.draw(this,_mm);			else _bmd.draw(this);			return _bmd;		}				public function get camera():Camera { return _camera; }				public function get status():String { return _status; }			}}